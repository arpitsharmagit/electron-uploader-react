{
  "name": "desktop-uploader",
  "version": "2.0.3",
  "description": "Desktop Uploader(desktop App)",
  "main": "index.js",
  "author": "Merril",
  "scripts": {
    "download:font":"goofoffline outDir=src\\public\\css\\fonts outCss=font.css \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\"",
    "start": "cross-env NODE_ENV=production webpack -p  && cross-env NODE_ENV=production npm run electron",
    "start:dev": "webpack-dev-server",
    "setup": "node setup/setup.js",
    "watch": "webpack -d --watch",
    "electron": "electron .",
    "test:e2e": "mocha ./test/end-to-end/e2e.spec.js",
    "test:smoke": " cross-env NODE_ENV=production npm run setup && webpack -p && mocha ./test/smoke/smoke.test.js",
    "test:regression": "cross-env NODE_ENV=production npm run setup && webpack -p && mocha --recursive ./test/regression",
    "test:regression-tray": "cross-env NODE_ENV=production npm run setup && webpack -p && mocha --recursive ./test/regression/tray",
    "test:unit": "mocha --compilers js:babel-core/register --require ./test/unit/test_helper.js --recursive ./test/unit",
    "test:coverage": "nyc mocha --compilers js:babel-core/register --require ./test/unit/test_helper.js --recursive ./test/unit",
    "test": "npm run test:unit && npm run test:coverage",
    "build": "cross-env CSC_LINK=/resources/signingcert.pfx CSC_KEY_PASSWORD=<resources/key && webpack -p && electron-builder -w",
    "publish": "set CSC_LINK=./resources/signingcert.pfx && set /p CSC_KEY_PASSWORD=<resources/key && echo $CSC_LINK && echo $CSC_KEY_PASSWORD && cross-env NODE_ENV=production npm run setup && webpack -p && electron-builder -w -p always",
    "publish:stage": "cross-env CSC_LINK=/resources/signingcert.pfx CSC_KEY_PASSWORD=<resources/key NODE_ENV=production  RELEASE_ENV=STAGE npm run setup && webpack -p && cross-env RELEASE_ENV=STAGE electron-builder -w -p always",
    "start:stage": "cross-env NODE_ENV=production RELEASE_ENV=STAGE webpack -p  && cross-env NODE_ENV=production RELEASE_ENV=STAGE npm run electron",
    "flow": "flow"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/arpitsharmagit/electron-uploader-react.git"
  },
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.24.0",
    "babel-eslint": "^7.2.3",
    "babel-loader": "^6.4.1",
    "babel-polyfill": "^6.26.0",
    "babel-preset-es2015": "^6.24.0",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-react": "^6.23.0",
    "babel-preset-stage-1": "^6.22.0",
    "chai": "^4.0.2",
    "chai-as-promised": "^7.0.0",
    "chai-jquery": "^2.0.0",
    "chai-spies": "^0.7.1",
    "cross-env": "^5.0.5",
    "devtron": "^1.4.0",
    "electron": "^1.6.12",
    "electron-builder": "19.27.3",
    "enzyme": "^2.9.1",
    "eslint": "^4.0.0",
    "eslint-loader": "^1.8.0",
    "eslint-plugin-react": "^7.1.0",
    "fetch-mock": "^5.12.2",
    "fetch-ponyfill": "^4.1.0",
    "flow-bin": "^0.48.0",
    "glob": "^7.1.2",
    "istanbul": "^0.4.5",
    "jquery": "^3.2.1",
    "jsdom": "^11.2.0",
    "mocha": "^3.4.2",
    "mock-local-storage": "^1.0.5",
    "node-fetch": "^1.7.2",
    "nyc": "^11.0.2",
    "proxyquire": "^1.8.0",
    "react-addons-test-utils": "^15.6.0",
    "react-test-renderer": "^15.6.1",
    "redux-mock-store": "^1.2.3",
    "sinon": "^2.3.5",
    "spectron": "^3.6.4",
    "style-loader": "^0.18.2",
    "webpack": "^2.3.2",
    "webpack-dev-server": "^2.4.2",
    "write-yaml": "^1.0.0"
  },
  "dependencies": {
    "backtrace-js": "0.0.4",
    "electron-log": "^2.2.9",
    "electron-updater": "2.8.9",
    "google-fonts-offline": "^0.1.2",
    "http-status-codes": "^1.3.0",
    "immutability-helper": "^2.3.1",
    "lodash": "^4.17.4",
    "mixpanel": "^0.7.0",
    "node-notifier": "^5.1.2",
    "react": "^15.4.2",
    "react-bootstrap": "^0.31.2",
    "react-dom": "^15.4.2",
    "react-redux": "^5.0.6",
    "react-toastr": "^2.9.3",
    "react-virtualized": "^9.12.0",
    "redux": "^3.7.2",
    "redux-thunk": "^2.2.0",
    "request": "^2.81.0",
    "universal-analytics": "^0.4.14"
  },
  "nyc": {
    "include": [
      "src/**/*.js"
    ],
    "exclude": [
      "**/public/js/**",
      "coverage",
      "webpack.config.js",
      "**/end-to-end/**"
    ],
    "reporter": [
      "lcov",
      "text",
      "text-summary",
      "html",
      "cobertura"
    ],
    "all": true
  }
}
